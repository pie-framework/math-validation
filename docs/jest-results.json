{
  "numFailedTestSuites": 1,
  "numFailedTests": 48,
  "numPassedTestSuites": 2,
  "numPassedTests": 180,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 3,
  "numTotalTests": 228,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1616668168086,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 48,
      "numPassingTests": 174,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1616668171638,
        "runtime": 3495,
        "slow": false,
        "start": 1616668168143
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] == 4.5",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4.5"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] == 3.2 + 1.3",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 3.2 + 1.3"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] == (4 - \\frac{4}{5}) + 1.3",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == (4 - \\frac{4}{5}) + 1.3"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] == \\frac{9}{2}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{9}{2}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] == 4 \\frac{1}{2}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4 \\frac{1}{2}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] == \\frac{10}{2} - 0.5",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{10}{2} - 0.5"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/7119.ts",
            "4 \\frac{1}{2}"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/7119.ts 4 \\frac{1}{2} [S] != 4.55",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != 4.55"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 100",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 100"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 50 + 50",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 50 + 50"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 25 * 4",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 25 * 4"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 200 / 2",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 200 / 2"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 20 * 5",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 20 * 5"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 2.5 * 40",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 2.5 * 40"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 10 * 10",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 10 * 10"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] == 100/2 + 50",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 100/2 + 50"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] != 44 + 57",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != 44 + 57"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "100"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 100 [S] != 100 - 0.001",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != 100 - 0.001"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] == x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] == x+0",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x+0"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] == (x-2)+2",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == (x-2)+2"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] == ((x^2 + x) / x) - 1",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == ((x^2 + x) / x) - 1"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] == 2x/2",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 2x/2"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] == ((x^2 + x) / x) - 1",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == ((x^2 + x) / x) - 1"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] != y",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != y"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "x"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts x [S] != x + 1",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != x + 1"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == x^2 + 4x + 4",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x^2 + 4x + 4"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == x^2 + 4(x+1)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x^2 + 4(x+1)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == x^2 + 8 ((x+1) / 2)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x^2 + 8 ((x+1) / 2)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == (2 + x)^2",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == (2 + x)^2"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == x^2 + 4x + 4",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x^2 + 4x + 4"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == x^2 + 4(x+1)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x^2 + 4(x+1)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] == x^2 + 8 ((x+1) / 2)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x^2 + 8 ((x+1) / 2)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "(x + 2)^2"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts (x + 2)^2 [S] != x^2 + 4(x+2)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != x^2 + 4(x+2)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "breaks - not sure why > (x + 2)^2"
          ],
          "duration": 20,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": true,
                  "expected": false,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:110:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:110:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts breaks - not sure why > (x + 2)^2 [S] != x^3 + 4x + 4",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] != x^3 + 4x + 4"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "y^(2 x)"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts y^(2 x) [S] == y^(x+x)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == y^(x+x)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\sqrt{4x}"
          ],
          "duration": 16,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:121:87)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:121:87)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\sqrt{4x} [S] == \\sqrt{3x + 1x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\sqrt{3x + 1x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "1000"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 1000 [S] == 1,000",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 1,000"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "1000"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 1000 [S] == 1,000.00",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 1,000.00"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "1,500,000"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 1,500,000 [S] == 1500000",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 1500000"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "sin(x)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts sin(x) [S] == sin(x)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == sin(x)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "tan(x)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts tan(x) [S] == tan(x)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == tan(x)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "f^{-1}\\left(x\\right)=\\sqrt{x-1}+3"
          ],
          "duration": 8,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts f^{-1}\\left(x\\right)=\\sqrt{x-1}+3 [S] == f^{-1}\\left(x\\right)=\\sqrt{x-1}+4-1",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}\\left(x\\right)=\\sqrt{x-1}+4-1"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "72\\div12=6\\text{eggs}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts 72\\div12=6\\text{eggs} [S] == 72\\div12=(3+3)\\text{eggs}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 72\\div12=(3+3)\\text{eggs}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\left(x\\right)^{ \\frac{1}{\\left(y + 3\\right)}}"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\left(x\\right)^{ \\frac{1}{\\left(y + 3\\right)}} [S] == \\sqrt[\\left(y + 3\\right)]{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\sqrt[\\left(y + 3\\right)]{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\left(x\\right)^{\\frac{1}{3}}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\left(x\\right)^{\\frac{1}{3}} [S] == \\sqrt[3]{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\sqrt[3]{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\left(x\\right)^{\\frac{1}{n}}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\left(x\\right)^{\\frac{1}{n}} [S] == \\sqrt[n]{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\sqrt[n]{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\left(x\\right)^{\\frac{1}{n}}"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\left(x\\right)^{\\frac{1}{n}} [S] == \\sqrt[n]{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\sqrt[n]{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\left(x\\right)^{\\frac{1}{2}}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\left(x\\right)^{\\frac{1}{2}} [S] == \\sqrt{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\sqrt{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "\\left(x-1\\right)^{\\frac{1}{2}}+3"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts \\left(x-1\\right)^{\\frac{1}{2}}+3 [S] == \\sqrt{x-1}+3",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\sqrt{x-1}+3"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/basic-symbolic.ts",
            "f^{-1}\\left(x\\right)=\\left(x-1\\right)^{\\frac{1}{2}}+3"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/basic-symbolic.ts f^{-1}\\left(x\\right)=\\left(x-1\\right)^{\\frac{1}{2}}+3 [S] == f^{-1}\\left(x\\right)=\\sqrt{x-1}+3",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}\\left(x\\right)=\\sqrt{x-1}+3"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == \\frac{7x}{12}\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{7x}{12}\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == x\\times \\frac{1}{12}\\times 7\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x\\times \\frac{1}{12}\\times 7\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == x\\times 7\\times \\frac{1}{12}\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x\\times 7\\times \\frac{1}{12}\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == \\frac{1}{12}\\times x\\times 7\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{12}\\times x\\times 7\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == \\frac{7}{12}\\times x\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{7}{12}\\times x\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == \\frac{1}{12}x\\times 7\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{12}x\\times 7\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == \\frac{1}{12}\\left(7x\\right)\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{12}\\left(7x\\right)\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{x}{12}\\times7\\text{dollars}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{x}{12}\\times7\\text{dollars} [S] == \\frac{1}{12}\\left(x\\times 7\\right)\\ \\text{dollars}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{12}\\left(x\\times 7\\right)\\ \\text{dollars}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{n-5}{6}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{n-5}{6} [S] == \\frac{-5+n}{6}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{-5+n}{6}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{n-5}{6}"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{n-5}{6} [S] == \\frac{n}{6}-\\frac{5}{6}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{n}{6}-\\frac{5}{6}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{n-5}{6}"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{n-5}{6} [S] == -\\frac{5}{6}+\\frac{n}{6}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == -\\frac{5}{6}+\\frac{n}{6}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{n-5}{6}"
          ],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{n-5}{6} [S] == \\frac{1}{6}\\left(n-5\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{6}\\left(n-5\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{n-5}{6}"
          ],
          "duration": 47,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{n-5}{6} [S] == \\frac{1}{6}\\left(-5+n\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{6}\\left(-5+n\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "6 \\frac{1}{2}"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts 6 \\frac{1}{2} [S] == 6 + \\frac{1}{2}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 6 + \\frac{1}{2}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "6 \\frac{1}{2}"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts 6 \\frac{1}{2} [S] != 6 * \\frac{1}{2}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] != 6 * \\frac{1}{2}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}\\text{radians}\\ \\text{per}\\ \\text{second}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x}\\text{radians}\\ \\text{per}\\ \\text{second} [S] == \\frac{1}{x}\\left(6\\pi \\right)\\ \\text{radians}\\ \\text{per}\\ \\text{second}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{x}\\left(6\\pi \\right)\\ \\text{radians}\\ \\text{per}\\ \\text{second}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}\\text{radians}\\ \\text{per}\\ \\text{second}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x}\\text{radians}\\ \\text{per}\\ \\text{second} [S] == \\frac{6}{x}\\pi \\ \\text{radians}\\ \\text{per}\\ \\text{second}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{6}{x}\\pi \\ \\text{radians}\\ \\text{per}\\ \\text{second}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}\\text{radians}\\ \\text{per}\\ \\text{second}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x}\\text{radians}\\ \\text{per}\\ \\text{second} [S] == 6\\pi \\left(\\frac{1}{x}\\right)\\ \\text{radians}\\ \\text{per}\\ \\text{second}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 6\\pi \\left(\\frac{1}{x}\\right)\\ \\text{radians}\\ \\text{per}\\ \\text{second}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x} [S] == \\frac{1}{x}\\left(6\\pi \\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{x}\\left(6\\pi \\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x} [S] == \\frac{6}{x}\\pi",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{6}{x}\\pi"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x} [S] == 6 * \\frac{\\pi }{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 6 * \\frac{\\pi }{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x} [S] == \\left(6\\right) \\frac{\\pi }{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\left(6\\right) \\frac{\\pi }{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{6\\pi}{x}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{6\\pi}{x} [S] == 6\\pi \\left(\\frac{1}{x}\\right)\\ \\text{radians}\\ \\text{per}\\ \\text{second}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 6\\pi \\left(\\frac{1}{x}\\right)\\ \\text{radians}\\ \\text{per}\\ \\text{second}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == 4+\\frac{d}{240}\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4+\\frac{d}{240}\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == 4+\\frac{1}{240}d\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4+\\frac{1}{240}d\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == 4+d\\left(\\frac{1}{240}\\right)\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4+d\\left(\\frac{1}{240}\\right)\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == d\\left(\\frac{1}{240}\\right)+4\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == d\\left(\\frac{1}{240}\\right)+4\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == \\frac{1}{240}d+4\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{240}d+4\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == 4+\\frac{d}{240}\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4+\\frac{d}{240}\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == 4+\\frac{1}{240}d\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4+\\frac{1}{240}d\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == 4+d\\left(\\frac{1}{240}\\right)\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == 4+d\\left(\\frac{1}{240}\\right)\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == d\\left(\\frac{1}{240}\\right)+4\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == d\\left(\\frac{1}{240}\\right)+4\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{d}{240}+4\\ \\text{years}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{d}{240}+4\\ \\text{years} [S] == \\frac{1}{240}d+4\\ \\text{years}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{1}{240}d+4\\ \\text{years}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "0.65x"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts 0.65x [S] == \\frac{65}{100}x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{65}{100}x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "0.65x"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts 0.65x [S] == \\frac{13}{20}x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{13}{20}x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "0.65x"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts 0.65x [S] == \\frac{65x}{100}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{65x}{100}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "0.65x"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts 0.65x [S] == \\frac{13x}{20}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{13x}{20}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{a+c}{2}+\\frac{b+d}{2}i"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{a+c}{2}+\\frac{b+d}{2}i [S] == \\frac{c+a}{2}+\\frac{b+d}{2}i",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{c+a}{2}+\\frac{b+d}{2}i"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{a+c}{2}+\\frac{b+d}{2}i"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{a+c}{2}+\\frac{b+d}{2}i [S] == \\frac{c+a}{2}+\\frac{d+b}{2}i",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{c+a}{2}+\\frac{d+b}{2}i"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{a+c}{2}+\\frac{b+d}{2}i"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{a+c}{2}+\\frac{b+d}{2}i [S] == \\frac{a+c}{2}+\\frac{d+b}{2}i",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{a+c}{2}+\\frac{d+b}{2}i"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{10}{12}\\pi\\ \\text{radians}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{10}{12}\\pi\\ \\text{radians} [S] == \\frac{5}{6}\\pi \\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{5}{6}\\pi \\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{10}{12}\\pi\\ \\text{radians}"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{10}{12}\\pi\\ \\text{radians} [S] == \\frac{10\\pi }{12}\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{10\\pi }{12}\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{10}{12}\\pi\\ \\text{radians}"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{10}{12}\\pi\\ \\text{radians} [S] == \\frac{5\\pi }{6}\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{5\\pi }{6}\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{10}{12}\\pi\\ \\text{radians}"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{10}{12}\\pi\\ \\text{radians} [S] == \\frac{50\\pi }{60}\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{50\\pi }{60}\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "\\frac{10}{12}\\pi\\ \\text{radians}"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts \\frac{10}{12}\\pi\\ \\text{radians} [S] == \\frac{50}{60}\\pi \\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == \\frac{50}{60}\\pi \\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{3V}{B}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{3V}{B} [S] == h=3\\frac{V}{B}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=3\\frac{V}{B}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{3V}{B}"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{3V}{B} [S] == h=\\frac{\\left(3\\times V\\right)}{B}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\frac{\\left(3\\times V\\right)}{B}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{3V}{B}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{3V}{B} [S] == h=\\left(3V\\right)\\div B",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\left(3V\\right)\\div B"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{3V}{B}"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{3V}{B} [S] == h=\\left(3\\times V\\right)\\div B",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\left(3\\times V\\right)\\div B"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "r=\\sqrt{\\frac{V}{\\pi h}}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts r=\\sqrt{\\frac{V}{\\pi h}} [S] == r=\\left(\\frac{V}{\\pi h}\\right)^{\\frac{1}{2}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == r=\\left(\\frac{V}{\\pi h}\\right)^{\\frac{1}{2}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "r=\\sqrt{\\frac{V}{\\pi h}}"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts r=\\sqrt{\\frac{V}{\\pi h}} [S] == r=\\left(\\frac{V}{\\pi \\times h}\\right)^{\\frac{1}{2}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == r=\\left(\\frac{V}{\\pi \\times h}\\right)^{\\frac{1}{2}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "r=\\sqrt{\\frac{V}{\\pi h}}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts r=\\sqrt{\\frac{V}{\\pi h}} [S] == r=\\sqrt{\\frac{V}{\\pi \\times h}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == r=\\sqrt{\\frac{V}{\\pi \\times h}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=-\\frac{b}{m}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=-\\frac{b}{m} [S] == c=-b\\div m",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=-b\\div m"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=-\\frac{b}{m}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=-\\frac{b}{m} [S] == c=-b\\times \\frac{1}{m}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=-b\\times \\frac{1}{m}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=-\\frac{b}{m}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=-\\frac{b}{m} [S] == c=\\left(-b\\right)\\left(\\frac{1}{m}\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\left(-b\\right)\\left(\\frac{1}{m}\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=-\\frac{b}{m}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=-\\frac{b}{m} [S] == c=\\frac{-b}{m}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\frac{-b}{m}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=-\\frac{b}{m}"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=-\\frac{b}{m} [S] == c=\\frac{b}{-m}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\frac{b}{-m}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=\\frac{\\pi}{b}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=\\frac{\\pi}{b} [S] == c=\\pi \\div b",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\pi \\div b"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=\\frac{\\pi}{b}"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=\\frac{\\pi}{b} [S] == c=\\pi \\times \\frac{1}{b}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\pi \\times \\frac{1}{b}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=\\frac{\\pi}{b}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=\\frac{\\pi}{b} [S] == c=\\pi \\left(\\frac{1}{b}\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\pi \\left(\\frac{1}{b}\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "c=\\frac{\\pi}{b}"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts c=\\frac{\\pi}{b} [S] == c=\\left(\\frac{1}{b}\\right)\\pi ",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == c=\\left(\\frac{1}{b}\\right)\\pi "
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "V\\left(t\\right)=750\\left(1.5\\right)^t"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts V\\left(t\\right)=750\\left(1.5\\right)^t [S] == V(t)\\ =\\ 750\\left(\\frac{3}{2}\\right)^t",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == V(t)\\ =\\ 750\\left(\\frac{3}{2}\\right)^t"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "V\\left(t\\right)=750\\left(1.5\\right)^t"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts V\\left(t\\right)=750\\left(1.5\\right)^t [S] == V(t)\\ =\\ 750\\left(1+0.5\\right)^t",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == V(t)\\ =\\ 750\\left(1+0.5\\right)^t"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "V\\left(t\\right)=750\\left(1.5\\right)^t"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts V\\left(t\\right)=750\\left(1.5\\right)^t [S] == V(t)\\ =\\ 750\\left(1+\\frac{1}{2}\\right)^t",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == V(t)\\ =\\ 750\\left(1+\\frac{1}{2}\\right)^t"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "g\\left(x\\right)=\\sqrt[3]{x-2}"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts g\\left(x\\right)=\\sqrt[3]{x-2} [S] == g\\left(x\\right)\\ =\\ \\sqrt[3]{-2+x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == g\\left(x\\right)\\ =\\ \\sqrt[3]{-2+x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "g\\left(x\\right)=\\sqrt[3]{x-2}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts g\\left(x\\right)=\\sqrt[3]{x-2} [S] == g\\left(x\\right)\\ =\\ \\left(x-2\\right)^{\\frac{1}{3}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == g\\left(x\\right)\\ =\\ \\left(x-2\\right)^{\\frac{1}{3}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "g\\left(x\\right)=\\sqrt[3]{x-2}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts g\\left(x\\right)=\\sqrt[3]{x-2} [S] == g\\left(x\\right)\\ =\\ \\left(-2+x\\right)^{\\frac{1}{3}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == g\\left(x\\right)\\ =\\ \\left(-2+x\\right)^{\\frac{1}{3}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "g\\left(x\\right)=\\sqrt[3]{x-2}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts g\\left(x\\right)=\\sqrt[3]{x-2} [S] == g\\left(x\\right)\\ =\\ \\sqrt[3]{-2+x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == g\\left(x\\right)\\ =\\ \\sqrt[3]{-2+x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "g\\left(x\\right)=\\sqrt[3]{x-2}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts g\\left(x\\right)=\\sqrt[3]{x-2} [S] == g\\left(x\\right)\\ =\\ \\left(x-2\\right)^{\\frac{1}{3}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == g\\left(x\\right)\\ =\\ \\left(x-2\\right)^{\\frac{1}{3}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "g\\left(x\\right)=\\sqrt[3]{x-2}"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts g\\left(x\\right)=\\sqrt[3]{x-2} [S] == g\\left(x\\right)\\ =\\ \\left(-2+x\\right)^{\\frac{1}{3}}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == g\\left(x\\right)\\ =\\ \\left(-2+x\\right)^{\\frac{1}{3}}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=\\frac{ad}{c}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\frac{ad}{c}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=\\frac{a\\times d}{c}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\frac{a\\times d}{c}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=\\frac{d\\times a}{c}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\frac{d\\times a}{c}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=\\left(d\\times a\\right)\\div c",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\left(d\\times a\\right)\\div c"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=\\left(a\\times d\\right)\\div c",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=\\left(a\\times d\\right)\\div c"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=d\\left(\\frac{a}{c}\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=d\\left(\\frac{a}{c}\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=d\\left(a\\div c\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=d\\left(a\\div c\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=a\\left(d\\div c\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=a\\left(d\\div c\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "h=\\frac{da}{c}"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts h=\\frac{da}{c} [S] == h=a\\left(\\frac{d}{c}\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == h=a\\left(\\frac{d}{c}\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{1}{a}\\left(c-by\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{1}{a}\\left(c-by\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\left(c-by\\right)\\div a",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\left(c-by\\right)\\div a"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{1}{a}\\left(-by+c\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{1}{a}\\left(-by+c\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{\\left(-by+c\\right)}{a}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{\\left(-by+c\\right)}{a}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{-by+c}{a}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{-by+c}{a}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\left(-by+c\\right)\\div a",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\left(-by+c\\right)\\div a"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{\\left(c-by\\right)}{a}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{\\left(c-by\\right)}{a}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{c}{a}-\\frac{by}{a}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{c}{a}-\\frac{by}{a}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "x=\\frac{c-by}{a}"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts x=\\frac{c-by}{a} [S] == x=\\frac{1}{a}c-\\frac{1}{a}by",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{1}{a}c-\\frac{1}{a}by"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 9,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ \\left(3x+16\\right)x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left(x\\right)\\ =\\ \\left(3x+16\\right)x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 10,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ \\left(3x+16\\right)\\left(x\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left(x\\right)\\ =\\ \\left(3x+16\\right)\\left(x\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 8,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ \\left(16+3x\\right)\\left(x\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left(x\\right)\\ =\\ \\left(16+3x\\right)\\left(x\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ x\\left(16+3x\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left(x\\right)\\ =\\ x\\left(16+3x\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 9,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ \\left(16+3x\\right)x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left(x\\right)\\ =\\ \\left(16+3x\\right)x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 9,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ 16x+3x^2",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left(x\\right)\\ =\\ 16x+3x^2"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/fractions-symbolic.ts",
            "f\\left(x\\right)=x\\left(3x+16\\right)"
          ],
          "duration": 8,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/fractions-symbolic.ts f\\left(x\\right)=x\\left(3x+16\\right) [S] == f\\left(x\\right)\\ =\\ 3x^2+16x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left(x\\right)\\ =\\ 3x^2+16x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/old-literal.ts",
            "1,000"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/old-literal.ts 1,000 [L] == 1000",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] == 1000"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/old-literal.ts",
            "1.00"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/old-literal.ts 1.00 [L] == 1",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] == 1"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/old-literal.ts",
            "1.01"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/old-literal.ts 1.01 [L] == 1.01",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] == 1.01"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/old-literal.ts",
            "72\\div12=6\\text{eggs}"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/old-literal.ts 72\\div12=6\\text{eggs} [L] == 72\\div12=6\\text{eggs}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] == 72\\div12=6\\text{eggs}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/old-literal.ts",
            "72\\div12=6\\text{eggs}"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/old-literal.ts 72\\div12=6\\text{eggs} [L] ==  72\\div12=6\\text{eggs} ",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] ==  72\\div12=6\\text{eggs} "
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/old-literal.ts",
            "72\\div12=6\\text{eggs}"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/old-literal.ts 72\\div12=6\\text{eggs} [L] ==  72 \\div 12= 6 \\text{eggs} ",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] ==  72 \\div 12= 6 \\text{eggs} "
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-282.ts",
            "1"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-282.ts 1 [L] == 1.0",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] == 1.0"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-282.ts",
            "1"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-282.ts 1 [L] != 1.01",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] != 1.01"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-282.ts",
            "1"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-282.ts 1 [L] == 01",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] == 01"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-282.ts",
            "1"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": true,
                  "expected": false,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:110:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:110:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/PD-282.ts 1 [L] != 1.0",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] != 1.0"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] == a+10+b",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] == a+10+b"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] == 10+a+b",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] == 10+a+b"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] == 10+b+a",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] == 10+b+a"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] == b+a+10",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] == b+a+10"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] == b+a+10",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] == b+a+10"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] != a+10+b",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] != a+10+b"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] != 10+a+b",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] != 10+a+b"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] != 10+b+a",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] != 10+b+a"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] != b+a+10",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] != b+a+10"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "a+b+10"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/PD-283.ts a+b+10 [L] != b+a+10",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[L] != b+a+10"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "0<x≤4"
          ],
          "duration": 9,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid symbol '≤'",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.advance (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:444:13)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1228:14)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:641:22)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)",
                "location": 3
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid symbol '≤'",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.advance (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:444:13)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1228:14)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:641:22)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid symbol '≤'\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.advance (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:444:13)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1228:14)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:641:22)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts 0<x≤4 [L] == 4≥x>0",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] == 4≥x>0"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/PD-283.ts",
            "0<x≤4"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid symbol '≤'",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.advance (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:444:13)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1228:14)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:641:22)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)",
                "location": 3
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid symbol '≤'",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.advance (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:444:13)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1228:14)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:641:22)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid symbol '≤'\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.advance (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:444:13)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1228:14)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:641:22)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)"
          ],
          "fullName": "src/fixtures/latex-equal/PD-283.ts 0<x≤4 [L] != 4≥x>0",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[L] != 4≥x>0"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/percent.ts",
            "we have percent support in math-expressions - port"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/percent.ts we have percent support in math-expressions - port [S] == -12.5%",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == -12.5%"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/percent.ts",
            "we have percent support in math-expressions - port"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Operator % not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/percent.ts we have percent support in math-expressions - port [S] == -12.5\\%",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == -12.5\\%"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/percent.ts",
            "we have percent support in math-expressions - port"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Operator % not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:109:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:109:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/percent.ts we have percent support in math-expressions - port [S] != -11.5%",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] != -11.5%"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/percent.ts",
            "\\frac{2}{4} -12.5%"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Operator % not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)"
            }
          ],
          "failureMessages": [
            "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)"
          ],
          "fullName": "src/fixtures/latex-equal/percent.ts \\frac{2}{4} -12.5% [S] == \\frac{1}{2} - 12.5%",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\frac{1}{2} - 12.5%"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/percent.ts",
            "\\frac{2}{4} -12.5%"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Operator % not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)"
            }
          ],
          "failureMessages": [
            "Error: Operator % not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:341:25)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:339:18)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)"
          ],
          "fullName": "src/fixtures/latex-equal/percent.ts \\frac{2}{4} -12.5% [S] == \\frac{10}{20}-12.5\\%",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\frac{10}{20}-12.5\\%"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "\\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right)"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.",
              "passed": false,
              "stack": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
            }
          ],
          "failureMessages": [
            "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) [S] == (\\frac{\\sqrt{8}}{3},\\frac{1}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == (\\frac{\\sqrt{8}}{3},\\frac{1}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "\\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right)"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.",
              "passed": false,
              "stack": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
            }
          ],
          "failureMessages": [
            "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) [S] == (\\frac{2}{3}\\sqrt{2},\\frac{1}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == (\\frac{2}{3}\\sqrt{2},\\frac{1}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "\\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right)"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.",
              "passed": false,
              "stack": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
            }
          ],
          "failureMessages": [
            "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) [S] == (\\frac{1}{3}\\sqrt{8},\\frac{1}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == (\\frac{1}{3}\\sqrt{8},\\frac{1}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "\\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right)"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.",
              "passed": false,
              "stack": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
            }
          ],
          "failureMessages": [
            "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equalScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.anyAny (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/relational/equal.js:108:14)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at equal (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:771:12)\n    at _ruleMatch (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/algebra/simplify.js:698:28)"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) [S] == (\\frac{1}{3}\\sqrt{8},\\frac{1}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == (\\frac{1}{3}\\sqrt{8},\\frac{1}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right)"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right) [S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{1}{3}\\left(x-3\\right),\\frac{1}{3}\\left(y-2\\right))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{1}{3}\\left(x-3\\right),\\frac{1}{3}\\left(y-2\\right))"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right)"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right) [S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{1}{3}\\left(-3+x\\right),\\frac{1}{3}\\left(-2+y\\right))",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{1}{3}\\left(-3+x\\right),\\frac{1}{3}\\left(-2+y\\right))"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right)"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right) [S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{-3+x}{3},\\frac{-2+y}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{-3+x}{3},\\frac{-2+y}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right)"
          ],
          "duration": 26,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: NaN). Use function fraction(x) to convert to Fraction.",
              "passed": false,
              "stack": "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: NaN). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at Function.multiplyScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at multiply (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:16)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:51)"
            }
          ],
          "failureMessages": [
            "TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: NaN). Use function fraction(x) to convert to Fraction.\n    at convert (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/core/function/typed.js:264:15)\n    at Array.convertArg (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:819:22)\n    at Function.convertArgs (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:766:45)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at Function.multiplyScalar (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at Function.generic (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1073:27)\n    at multiply (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1092:24)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:16)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:51)"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right) [S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{x}{3}-1,\\frac{y-1}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{x}{3}-1,\\frac{y-1}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right)"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right) [S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{-3+x}{3},\\frac{-2+y}{3})",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{-3+x}{3},\\frac{-2+y}{3})"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-a.ts",
            "-\\frac{3\\pi}{4}\\le x\\le\\frac{\\pi}{4}"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-a.ts -\\frac{3\\pi}{4}\\le x\\le\\frac{\\pi}{4} [S] == -\\frac{3}{4}\\pi\\ \\le\\ x\\le\\ \\ \\frac{1}{4}\\pi",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == -\\frac{3}{4}\\pi\\ \\le\\ x\\le\\ \\ \\frac{1}{4}\\pi"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50"
          ],
          "duration": 12,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:51)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:51)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:51)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:51)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50 [S] == m=50\\cos\\left(\\frac{\\pi\\ }{15}d\\right)+50",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == m=50\\cos\\left(\\frac{\\pi\\ }{15}d\\right)+50"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50 [S] == m=50\\cos\\left(\\frac{1}{15}\\pi\\ d\\right)+50",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == m=50\\cos\\left(\\frac{1}{15}\\pi\\ d\\right)+50"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50"
          ],
          "duration": 12,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "matcherResult": {
                  "actual": false,
                  "expected": true,
                  "name": "toEqual",
                  "pass": false
                }
              },
              "expected": "",
              "matcherName": "",
              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
              "passed": false,
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:95:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:75:41"
          ],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50 [S] == m=50\\cos\\left(d\\right)+50",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == m=50\\cos\\left(d\\right)+50"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\frac{2}{5}\\pi\\ x\\right)+2500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\frac{2}{5}\\pi\\ x\\right)+2500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\left(\\frac{2}{5}\\pi\\ \\right)x\\right)+2500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\left(\\frac{2}{5}\\pi\\ \\right)x\\right)+2500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\left(\\frac{2\\pi\\ }{5}\\right)x\\right)+2500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\left(\\frac{2\\pi\\ }{5}\\right)x\\right)+2500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\frac{2\\pi\\ }{5}x\\right)+2,500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\frac{2\\pi\\ }{5}x\\right)+2,500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\frac{2}{5}\\pi\\ x\\right)+2,500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\frac{2}{5}\\pi\\ x\\right)+2,500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\left(\\frac{2}{5}\\pi\\ \\right)x\\right)+2,500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\left(\\frac{2}{5}\\pi\\ \\right)x\\right)+2,500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/symbolic-b.ts",
            "y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500"
          ],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/symbolic-b.ts y=250\\sin\\left(\\frac{2\\pi}{5}x\\right)+2500 [S] == y=250\\sin\\left(\\left(\\frac{2\\pi\\ }{5}\\right)x\\right)+2,500",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == y=250\\sin\\left(\\left(\\frac{2\\pi\\ }{5}\\right)x\\right)+2,500"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "a_n=3a_{n-1}"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Operator _ not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Operator _ not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Operator _ not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:347:11)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts a_n=3a_{n-1} [S] == a_n=3\\times a_{n-1}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == a_n=3\\times a_{n-1}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(y\\right)=26000\\left(0.83\\right)^y"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(y\\right)=26000\\left(0.83\\right)^y [S] == f\\left(y\\right)=26000\\left(1-0.17\\right)^y",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left(y\\right)=26000\\left(1-0.17\\right)^y"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(y\\right)=26000\\left(0.83\\right)^y"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(y\\right)=26000\\left(0.83\\right)^y [S] == f\\left(y\\right)=26,000\\left(1-0.17\\right)^y",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left(y\\right)=26,000\\left(1-0.17\\right)^y"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(y\\right)=26000\\left(0.83\\right)^y"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(y\\right)=26000\\left(0.83\\right)^y [S] == f\\left(y\\right)=26,000\\left(0.83\\right)^y",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f\\left(y\\right)=26,000\\left(0.83\\right)^y"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f^{-1}\\left(x\\right)=-\\frac{12}{x}+8"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 [S] == f^{-1}(x)\\ =\\ 8-\\frac{12}{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}(x)\\ =\\ 8-\\frac{12}{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f^{-1}\\left(x\\right)=-\\frac{12}{x}+8"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 [S] == f^{-1}(x)\\ =\\ \\frac{8x-12}{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}(x)\\ =\\ \\frac{8x-12}{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f^{-1}\\left(x\\right)=-\\frac{12}{x}+8"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 [S] == f^{-1}(x)\\ =\\ \\frac{-12+8x}{x}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}(x)\\ =\\ \\frac{-12+8x}{x}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f^{-1}\\left(x\\right)=-\\frac{12}{x}+8"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 [S] == f^{-1}(x)\\ =\\ -12\\left(\\frac{1}{x}\\right)+8",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}(x)\\ =\\ -12\\left(\\frac{1}{x}\\right)+8"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f^{-1}\\left(x\\right)=-\\frac{12}{x}+8"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "Error: Non string functions not implemented for conversion to mathjs",
              "passed": false,
              "stack": "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
            }
          ],
          "failureMessages": [
            "Error: Non string functions not implemented for conversion to mathjs\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:107:15)\n    at AstToMathJs.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:184:23)\n    at Array.map (<anonymous>)\n    at AstToMathJs.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/ast-to-mathjs.ts:182:32)\n    at toMathNode (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:27:14)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:47:15)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/queueRunner.js:45:12"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 [S] == f^{-1}(x)\\ =\\ 8-12\\left(\\frac{1}{x}\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f^{-1}(x)\\ =\\ 8-12\\left(\\frac{1}{x}\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ 8+1.1x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f(x)\\ =\\ 8+1.1x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ 8+\\left(1+0.1\\right)x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f(x)\\ =\\ 8+\\left(1+0.1\\right)x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ \\left(1+0.1\\right)x+8",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == f(x)\\ =\\ \\left(1+0.1\\right)x+8"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 10,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ x+0.1x+8",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f(x)\\ =\\ x+0.1x+8"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 11,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ 8+x+0.1x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f(x)\\ =\\ 8+x+0.1x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 11,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ 8+x+0.1x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f(x)\\ =\\ 8+x+0.1x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 12,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ 8+0.1x+x",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f(x)\\ =\\ 8+0.1x+x"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "f\\left(x\\right)=1.1x+8"
          ],
          "duration": 10,
          "failureDetails": [
            {
              "actual": "",
              "error": {},
              "expected": "",
              "matcherName": "",
              "message": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function",
              "passed": false,
              "stack": "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
            }
          ],
          "failureMessages": [
            "TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n    at evalFunctionNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/FunctionNode.js:115:87)\n    at evalOperatorNode (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/OperatorNode.js:102:19)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/node/Node.js:65:14)\n    at Parser.evaluate (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/Parser.js:90:34)\n    at Object.evaluate (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:169:24)\n    at Object.isMathEqual (/home/ede/dev/github/pie-framework/math-validation/src/symbolic/index.ts:51:10)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/latex-equal.ts:52:12)\n    at Object.latexEqual (/home/ede/dev/github/pie-framework/math-validation/src/index.ts:25:12)\n    at Object.<anonymous> (/home/ede/dev/github/pie-framework/math-validation/src/__tests__/latex-equal.spec.ts:93:23)\n    at Object.asyncJestTest (/home/ede/dev/github/pie-framework/math-validation/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts f\\left(x\\right)=1.1x+8 [S] == f(x)\\ =\\ 0.1x+x+8",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == f(x)\\ =\\ 0.1x+x+8"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "x=\\frac{20,000}{r^2}\\text{radians}"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts x=\\frac{20,000}{r^2}\\text{radians} [S] == x=\\frac{1}{r^2}\\left(20,000\\right)\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{1}{r^2}\\left(20,000\\right)\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "x=\\frac{20,000}{r^2}\\text{radians}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts x=\\frac{20,000}{r^2}\\text{radians} [S] == x=\\frac{20000}{r^2}\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{20000}{r^2}\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "x=\\frac{20,000}{r^2}\\text{radians}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts x=\\frac{20,000}{r^2}\\text{radians} [S] == x=\\frac{1}{r^2}\\times 20000\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{1}{r^2}\\times 20000\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "x=\\frac{20,000}{r^2}\\text{radians}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts x=\\frac{20,000}{r^2}\\text{radians} [S] == x=\\frac{1}{r^2}\\times 20,000\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=\\frac{1}{r^2}\\times 20,000\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "x=\\frac{20,000}{r^2}\\text{radians}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts x=\\frac{20,000}{r^2}\\text{radians} [S] == x=20000\\left(\\frac{1}{r^2}\\right)\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=20000\\left(\\frac{1}{r^2}\\right)\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "x=\\frac{20,000}{r^2}\\text{radians}"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts x=\\frac{20,000}{r^2}\\text{radians} [S] == x=20,000\\left(\\frac{1}{r^2}\\right)\\ \\text{radians}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "[S] == x=20,000\\left(\\frac{1}{r^2}\\right)\\ \\text{radians}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "\\text{height}\\ =\\ 120\\sin\\theta"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid location of '='",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)",
                "location": 16
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid location of '='",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid location of '='\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts \\text{height}\\ =\\ 120\\sin\\theta [S] == \\text{height}\\ =\\ 120\\left(\\sin \\theta \\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\text{height}\\ =\\ 120\\left(\\sin \\theta \\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "\\text{height}\\ =\\ 120\\sin\\theta"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid location of '='",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)",
                "location": 16
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid location of '='",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid location of '='\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts \\text{height}\\ =\\ 120\\sin\\theta [S] == \\text{height}\\ =\\ 120\\sin \\left(\\theta \\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\text{height}\\ =\\ 120\\sin \\left(\\theta \\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "\\text{height}\\ =\\ 120\\sin\\theta"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid location of '='",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)",
                "location": 16
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid location of '='",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid location of '='\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts \\text{height}\\ =\\ 120\\sin\\theta [S] == \\text{height}\\ =\\ \\left(\\sin \\theta \\right)\\left(120\\right)",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\text{height}\\ =\\ \\left(\\sin \\theta \\right)\\left(120\\right)"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "\\text{height}\\ =\\ 120\\sin\\theta"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid location of '='",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)",
                "location": 16
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid location of '='",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid location of '='\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts \\text{height}\\ =\\ 120\\sin\\theta [S] == \\text{height}\\ =\\ \\left(\\sin \\theta \\right)\\times 120",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\text{height}\\ =\\ \\left(\\sin \\theta \\right)\\times 120"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "\\text{height}\\ =\\ 120\\sin\\theta"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Invalid location of '='",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)",
                "location": 16
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Invalid location of '='",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
            }
          ],
          "failureMessages": [
            "ParseError: Invalid location of '='\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:807:15)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)\n    at LatexToAst.statement_list (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:479:22)\n    at LatexToAst.convert (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:467:23)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts \\text{height}\\ =\\ 120\\sin\\theta [S] == \\text{height}\\ =\\ \\sin \\theta \\times 120",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == \\text{height}\\ =\\ \\sin \\theta \\times 120"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "\\cos\\theta=-\\sqrt{1-y^2}"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "ParseError",
                "message": "Expecting ( after function",
                "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1212:21)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)",
                "location": 10
              },
              "expected": "",
              "matcherName": "",
              "message": "ParseError: Expecting ( after function",
              "passed": false,
              "stack": "Error: \n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1212:21)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)"
            }
          ],
          "failureMessages": [
            "ParseError: Expecting ( after function\n    at new ParseError (/home/ede/dev/github/pie-framework/math-validation/src/conversion/error.ts:4:16)\n    at LatexToAst.baseFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:1212:21)\n    at LatexToAst.nonMinusFactor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:818:23)\n    at LatexToAst.factor (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:800:23)\n    at LatexToAst.term (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:754:18)\n    at LatexToAst.expression (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:712:20)\n    at LatexToAst.relation (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:609:20)\n    at LatexToAst.statement_b (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:588:20)\n    at LatexToAst.statement_a (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:562:20)\n    at LatexToAst.statement (/home/ede/dev/github/pie-framework/math-validation/src/conversion/latex-to-ast.ts:511:22)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts \\cos\\theta=-\\sqrt{1-y^2} [S] == cos\\ \\theta\\ \\ =\\ -\\sqrt{-y^2+1}",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] == cos\\ \\theta\\ \\ =\\ -\\sqrt{-y^2+1}"
        },
        {
          "ancestorTitles": [
            "src/fixtures/latex-equal/to-be-fixed.ts",
            "100"
          ],
          "duration": 8,
          "failureDetails": [
            {
              "actual": "",
              "error": {
                "name": "InvalidParameter",
                "stack": "InvalidParameter: \n    at new errorConstructor (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:59:24)\n    at throwInvalidParam (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:89:11)\n    at parse (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:247:11)\n    at new Fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:350:5)\n    at Function.string (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/type/fraction/function/fraction.js:52:14)\n    at fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1089:85)\n    at Object.validOutputTypes.Fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/utils/numeric.js:35:14)\n    at numeric (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/utils/numeric.js:81:42)\n    at parseNumber (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/parse.js:1670:31)\n    at parseObject (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/parse.js:1654:12)",
                "message": ""
              },
              "expected": "",
              "matcherName": "",
              "message": "InvalidParameter",
              "passed": false,
              "stack": "InvalidParameter: \n    at new errorConstructor (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:59:24)\n    at throwInvalidParam (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:89:11)\n    at parse (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:247:11)\n    at new Fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:350:5)\n    at Function.string (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/type/fraction/function/fraction.js:52:14)\n    at fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1089:85)\n    at Object.validOutputTypes.Fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/utils/numeric.js:35:14)\n    at numeric (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/utils/numeric.js:81:42)\n    at parseNumber (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/parse.js:1670:31)\n    at parseObject (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/parse.js:1654:12)"
            }
          ],
          "failureMessages": [
            "InvalidParameter: \n    at new errorConstructor (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:59:24)\n    at throwInvalidParam (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:89:11)\n    at parse (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:247:11)\n    at new Fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/fraction.js/fraction.js:350:5)\n    at Function.string (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/type/fraction/function/fraction.js:52:14)\n    at fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/typed-function/typed-function.js:1089:85)\n    at Object.validOutputTypes.Fraction (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/utils/numeric.js:35:14)\n    at numeric (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/function/utils/numeric.js:81:42)\n    at parseNumber (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/parse.js:1670:31)\n    at parseObject (/home/ede/dev/github/pie-framework/math-validation/node_modules/mathjs/lib/cjs/expression/parse.js:1654:12)"
          ],
          "fullName": "src/fixtures/latex-equal/to-be-fixed.ts 100 [S] != 100 - 0.0001",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "[S] != 100 - 0.0001"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/basic-symbolic.ts › breaks - not sure why > (x + 2)^2 › [S] != x^3 + 4x + 4\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          it(\u001b[32m`[${mk}] != ${y}`\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 110 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 111 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 112 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:110:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/basic-symbolic.ts › y^(2 x) › [S] == y^(x+x)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/basic-symbolic.ts › \\sqrt{4x} › [S] == \\sqrt{3x + 1x}\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:121:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/basic-symbolic.ts › f^{-1}\\left(x\\right)=\\sqrt{x-1}+3 › [S] == f^{-1}\\left(x\\right)=\\sqrt{x-1}+4-1\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/basic-symbolic.ts › f^{-1}\\left(x\\right)=\\left(x-1\\right)^{\\frac{1}{2}}+3 › [S] == f^{-1}\\left(x\\right)=\\sqrt{x-1}+3\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/fractions-symbolic.ts › f\\left(x\\right)=x\\left(3x+16\\right) › [S] == f\\left(x\\right)\\ =\\ \\left(3x+16\\right)x\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/fractions-symbolic.ts › f\\left(x\\right)=x\\left(3x+16\\right) › [S] == f\\left(x\\right)\\ =\\ \\left(3x+16\\right)\\left(x\\right)\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/fractions-symbolic.ts › f\\left(x\\right)=x\\left(3x+16\\right) › [S] == f\\left(x\\right)\\ =\\ \\left(16+3x\\right)\\left(x\\right)\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/fractions-symbolic.ts › f\\left(x\\right)=x\\left(3x+16\\right) › [S] == f\\left(x\\right)\\ =\\ \\left(16+3x\\right)x\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/fractions-symbolic.ts › f\\left(x\\right)=x\\left(3x+16\\right) › [S] == f\\left(x\\right)\\ =\\ 16x+3x^2\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/fractions-symbolic.ts › f\\left(x\\right)=x\\left(3x+16\\right) › [S] == f\\left(x\\right)\\ =\\ 3x^2+16x\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-282.ts › 1 › [L] != 1.0\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          it(\u001b[32m`[${mk}] != ${y}`\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 110 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 111 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 112 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:110:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › a+b+10 › [L] == a+10+b\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › a+b+10 › [L] == 10+a+b\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › a+b+10 › [L] == 10+b+a\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › a+b+10 › [L] == b+a+10\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › a+b+10 › [L] == b+a+10\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › 0<x≤4 › [L] == 4≥x>0\u001b[39m\u001b[22m\n\n    ParseError: Invalid symbol '≤'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.advance (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:444:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.baseFactor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:1228:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.nonMinusFactor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:818:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:800:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:641:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/PD-283.ts › 0<x≤4 › [L] != 4≥x>0\u001b[39m\u001b[22m\n\n    ParseError: Invalid symbol '≤'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.advance (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:444:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.baseFactor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:1228:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.nonMinusFactor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:818:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:800:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:641:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/percent.ts › we have percent support in math-expressions - port › [S] == -12.5\\%\u001b[39m\u001b[22m\n\n    Operator % not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 345 | \u001b[39m    }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 346 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 347 | \u001b[39m    \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 | \u001b[39m      \u001b[32m\"Operator \"\u001b[39m \u001b[33m+\u001b[39m operator \u001b[33m+\u001b[39m \u001b[32m\" not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 349 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 350 | \u001b[39m  }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:347:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:341:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:339:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/percent.ts › we have percent support in math-expressions - port › [S] != -11.5%\u001b[39m\u001b[22m\n\n    Operator % not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 345 | \u001b[39m    }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 346 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 347 | \u001b[39m    \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 | \u001b[39m      \u001b[32m\"Operator \"\u001b[39m \u001b[33m+\u001b[39m operator \u001b[33m+\u001b[39m \u001b[32m\" not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 349 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 350 | \u001b[39m  }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:347:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:341:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:339:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:109:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/percent.ts › \\frac{2}{4} -12.5% › [S] == \\frac{1}{2} - 12.5%\u001b[39m\u001b[22m\n\n    Operator % not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 345 | \u001b[39m    }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 346 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 347 | \u001b[39m    \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 | \u001b[39m      \u001b[32m\"Operator \"\u001b[39m \u001b[33m+\u001b[39m operator \u001b[33m+\u001b[39m \u001b[32m\" not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 349 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 350 | \u001b[39m  }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:347:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:341:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:339:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:341:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:339:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/percent.ts › \\frac{2}{4} -12.5% › [S] == \\frac{10}{20}-12.5\\%\u001b[39m\u001b[22m\n\n    Operator % not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 345 | \u001b[39m    }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 346 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 347 | \u001b[39m    \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 | \u001b[39m      \u001b[32m\"Operator \"\u001b[39m \u001b[33m+\u001b[39m operator \u001b[33m+\u001b[39m \u001b[32m\" not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 349 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 350 | \u001b[39m  }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:347:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:341:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:339:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:341:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:339:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-a.ts › \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) › [S] == (\\frac{\\sqrt{8}}{3},\\frac{1}{3})\u001b[39m\u001b[22m\n\n    TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat convert (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/core/function/typed.js\u001b[2m:264:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Array.convertArg (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:819:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.convertArgs (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:766:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equalScalar (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.anyAny (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/relational/equal.js\u001b[2m:108:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equal (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:771:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:698:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-a.ts › \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) › [S] == (\\frac{2}{3}\\sqrt{2},\\frac{1}{3})\u001b[39m\u001b[22m\n\n    TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat convert (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/core/function/typed.js\u001b[2m:264:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Array.convertArg (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:819:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.convertArgs (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:766:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equalScalar (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.anyAny (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/relational/equal.js\u001b[2m:108:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equal (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:771:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:698:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-a.ts › \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) › [S] == (\\frac{1}{3}\\sqrt{8},\\frac{1}{3})\u001b[39m\u001b[22m\n\n    TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat convert (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/core/function/typed.js\u001b[2m:264:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Array.convertArg (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:819:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.convertArgs (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:766:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equalScalar (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.anyAny (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/relational/equal.js\u001b[2m:108:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equal (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:771:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:698:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-a.ts › \\left(\\frac{2\\sqrt{2}}{3},\\frac{1}{3}\\right) › [S] == (\\frac{1}{3}\\sqrt{8},\\frac{1}{3})\u001b[39m\u001b[22m\n\n    TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: 0.31426968052735443). Use function fraction(x) to convert to Fraction.\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat convert (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/core/function/typed.js\u001b[2m:264:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Array.convertArg (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:819:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.convertArgs (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:766:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equalScalar (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.anyAny (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/relational/equal.js\u001b[2m:108:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat equal (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:771:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat _ruleMatch (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/algebra/simplify.js\u001b[2m:698:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-a.ts › f\\left[\\left(x,y\\right)\\right]=\\left(\\frac{x-3}{3},\\frac{y-2}{3}\\right) › [S] == f\\left[\\left(x,y\\right)\\right]=(\\frac{x}{3}-1,\\frac{y-1}{3})\u001b[39m\u001b[22m\n\n    TypeError: Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: NaN). Use function fraction(x) to convert to Fraction.\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat convert (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/core/function/typed.js\u001b[2m:264:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Array.convertArg (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:819:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.convertArgs (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:766:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.multiplyScalar (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.generic (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1073:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat multiply (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1092:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:51)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-b.ts › m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50 › [S] == m=50\\cos\\left(\\frac{\\pi\\ }{15}d\\right)+50\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:51)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:51)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/symbolic-b.ts › m=50\\cos\\left(\\frac{2\\pi}{30}d\\right)+50 › [S] == m=50\\cos\\left(d\\right)+50\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m            \u001b[36mconst\u001b[39m l \u001b[33m=\u001b[39m latexEqual(t\u001b[33m.\u001b[39mtarget\u001b[33m,\u001b[39m y\u001b[33m,\u001b[39m { legacy\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m mode })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 | \u001b[39m            \u001b[90m// console.log(l);\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 95 | \u001b[39m            expect(l)\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m          })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 98 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:95:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › a_n=3a_{n-1} › [S] == a_n=3\\times a_{n-1}\u001b[39m\u001b[22m\n\n    Operator _ not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 345 | \u001b[39m    }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 346 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 347 | \u001b[39m    \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 | \u001b[39m      \u001b[32m\"Operator \"\u001b[39m \u001b[33m+\u001b[39m operator \u001b[33m+\u001b[39m \u001b[32m\" not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 349 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 350 | \u001b[39m  }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:347:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 › [S] == f^{-1}(x)\\ =\\ 8-\\frac{12}{x}\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 › [S] == f^{-1}(x)\\ =\\ \\frac{8x-12}{x}\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 › [S] == f^{-1}(x)\\ =\\ \\frac{-12+8x}{x}\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 › [S] == f^{-1}(x)\\ =\\ -12\\left(\\frac{1}{x}\\right)+8\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f^{-1}\\left(x\\right)=-\\frac{12}{x}+8 › [S] == f^{-1}(x)\\ =\\ 8-12\\left(\\frac{1}{x}\\right)\u001b[39m\u001b[22m\n\n    Non string functions not implemented for conversion to mathjs\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      log(\u001b[32m\"0\"\u001b[39m\u001b[33m,\u001b[39m operands[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m operands[\u001b[35m0\u001b[39m] \u001b[33m!==\u001b[39m \u001b[32m\"string\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        \u001b[36mthrow\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[32m\"Non string functions not implemented for conversion to mathjs\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:107:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.<anonymous> (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:184:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.map (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat AstToMathJs.convert (\u001b[22m\u001b[2msrc/conversion/ast-to-mathjs.ts\u001b[2m:182:32)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toMathNode (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:47:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f\\left(x\\right)=1.1x+8 › [S] == f(x)\\ =\\ x+0.1x+8\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f\\left(x\\right)=1.1x+8 › [S] == f(x)\\ =\\ 8+x+0.1x\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f\\left(x\\right)=1.1x+8 › [S] == f(x)\\ =\\ 8+x+0.1x\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f\\left(x\\right)=1.1x+8 › [S] == f(x)\\ =\\ 8+0.1x+x\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › f\\left(x\\right)=1.1x+8 › [S] == f(x)\\ =\\ 0.1x+x+8\u001b[39m\u001b[22m\n\n    TypeError: (intermediate value)(intermediate value)(intermediate value) is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 | \u001b[39m  \u001b[36mconst\u001b[39m aResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(a\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 | \u001b[39m  \u001b[36mconst\u001b[39m bResult \u001b[33m=\u001b[39m prsr\u001b[33m.\u001b[39mevaluate(b\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 172 | \u001b[39m  log(\u001b[32m\"aResult:\"\u001b[39m\u001b[33m,\u001b[39m aResult\u001b[33m,\u001b[39m \u001b[36mtypeof\u001b[39m aResult)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalFunctionNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/FunctionNode.js\u001b[2m:115:87)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat evalOperatorNode (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/OperatorNode.js\u001b[2m:102:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/node/Node.js\u001b[2m:65:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Parser.evaluate (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/Parser.js\u001b[2m:90:34)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.evaluate (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:169:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.isMathEqual (\u001b[22m\u001b[2msrc/symbolic/index.ts\u001b[2m:51:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/latex-equal.ts\u001b[2m:52:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.latexEqual (\u001b[22m\u001b[2msrc/index.ts\u001b[2m:25:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/latex-equal.spec.ts\u001b[39m\u001b[0m\u001b[2m:93:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › \\text{height}\\ =\\ 120\\sin\\theta › [S] == \\text{height}\\ =\\ 120\\left(\\sin \\theta \\right)\u001b[39m\u001b[22m\n\n    ParseError: Invalid location of '='\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:807:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:609:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:511:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_list (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:479:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.convert (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:467:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › \\text{height}\\ =\\ 120\\sin\\theta › [S] == \\text{height}\\ =\\ 120\\sin \\left(\\theta \\right)\u001b[39m\u001b[22m\n\n    ParseError: Invalid location of '='\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:807:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:609:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:511:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_list (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:479:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.convert (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:467:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › \\text{height}\\ =\\ 120\\sin\\theta › [S] == \\text{height}\\ =\\ \\left(\\sin \\theta \\right)\\left(120\\right)\u001b[39m\u001b[22m\n\n    ParseError: Invalid location of '='\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:807:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:609:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:511:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_list (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:479:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.convert (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:467:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › \\text{height}\\ =\\ 120\\sin\\theta › [S] == \\text{height}\\ =\\ \\left(\\sin \\theta \\right)\\times 120\u001b[39m\u001b[22m\n\n    ParseError: Invalid location of '='\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:807:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:609:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:511:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_list (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:479:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.convert (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:467:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › \\text{height}\\ =\\ 120\\sin\\theta › [S] == \\text{height}\\ =\\ \\sin \\theta \\times 120\u001b[39m\u001b[22m\n\n    ParseError: Invalid location of '='\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:807:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:609:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:511:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_list (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:479:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.convert (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:467:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › \\cos\\theta=-\\sqrt{1-y^2} › [S] == cos\\ \\theta\\ \\ =\\ -\\sqrt{-y^2+1}\u001b[39m\u001b[22m\n\n    ParseError: Expecting ( after function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m\"ParseError\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m=\u001b[39m message \u001b[33m||\u001b[39m \u001b[32m\"Error parsing input\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 4 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstack \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m()\u001b[33m.\u001b[39mstack\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlocation \u001b[33m=\u001b[39m location\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 | \u001b[39m\u001b[33mParseError\u001b[39m\u001b[33m.\u001b[39mprototype \u001b[33m=\u001b[39m \u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[33mError\u001b[39m\u001b[33m.\u001b[39mprototype)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ParseError (\u001b[22m\u001b[2msrc/conversion/error.ts\u001b[2m:4:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.baseFactor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:1212:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.nonMinusFactor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:818:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.factor (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:800:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.term (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:754:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.expression (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:712:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.relation (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:609:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_b (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:588:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement_a (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:562:20)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat LatexToAst.statement (\u001b[22m\u001b[2msrc/conversion/latex-to-ast.ts\u001b[2m:511:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msrc/fixtures/latex-equal/to-be-fixed.ts › 100 › [S] != 100 - 0.0001\u001b[39m\u001b[22m\n\n    InvalidParameter:\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new errorConstructor (\u001b[22m\u001b[2mnode_modules/fraction.js/fraction.js\u001b[2m:59:24)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat throwInvalidParam (\u001b[22m\u001b[2mnode_modules/fraction.js/fraction.js\u001b[2m:89:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parse (\u001b[22m\u001b[2mnode_modules/fraction.js/fraction.js\u001b[2m:247:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Fraction (\u001b[22m\u001b[2mnode_modules/fraction.js/fraction.js\u001b[2m:350:5)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.string (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/type/fraction/function/fraction.js\u001b[2m:52:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fraction (\u001b[22m\u001b[2mnode_modules/typed-function/typed-function.js\u001b[2m:1089:85)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.validOutputTypes.Fraction (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/utils/numeric.js\u001b[2m:35:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat numeric (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/function/utils/numeric.js\u001b[2m:81:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseNumber (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/parse.js\u001b[2m:1670:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat parseObject (\u001b[22m\u001b[2mnode_modules/mathjs/lib/cjs/expression/parse.js\u001b[2m:1654:12)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1616668172134,
        "runtime": 465,
        "slow": false,
        "start": 1616668171669
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/ede/dev/github/pie-framework/math-validation/src/__tests__/node-sort.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "'b + a' => 'a + b'"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "'b + a' => 'a + b' sorts",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "sorts"
        },
        {
          "ancestorTitles": [
            "'b + c + a' => 'a + b + c'"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "'b + c + a' => 'a + b + c' sorts",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "sorts"
        },
        {
          "ancestorTitles": [
            "'b + a + c' => 'a + b + c'"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "'b + a + c' => 'a + b + c' sorts",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "sorts"
        },
        {
          "ancestorTitles": [
            "'c + b + a' => 'a + b + c'"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "'c + b + a' => 'a + b + c' sorts",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "sorts"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1616668172256,
        "runtime": 95,
        "slow": false,
        "start": 1616668172161
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/ede/dev/github/pie-framework/math-validation/src/conversion/__tests__/latex-to-ast.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "bugs in lta"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bugs in lta 1,000 => 1000",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "1,000 => 1000"
        },
        {
          "ancestorTitles": [
            "bugs in lta"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "bugs in lta 1,000,000 => 1000000",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "1,000,000 => 1000000"
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}